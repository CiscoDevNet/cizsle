#!/usr/bin/env bash
# Install all the development dependencies for this project.
#
# AUTHOR(s): Chris Lunsford <chrlunsf@cisco.com>


set -e
cd "$(dirname "$0")/.."


# Process Script Arguments
for i in ${@}; do
    case ${i} in
        --dev)
        install_dev=true
        ;;

        *)
        echo "Unknown argument: $i"
        exit 1
        ;;
    esac
done


# Verify system dependencies before attempting to install project dependencies
script/bootstrap


# Ensure that packages are only installed in an active virtual environment
export PIP_REQUIRE_VIRTUALENV=true


# Prefer use of a Pipfile and pipenv for dependency management
if [ -f "Pipfile" ] && [ -n "$(pipenv --version 2>/dev/null)" ]; then
    echo "==> Installing Pipfile dependencies"
    if [ ${install_dev} ]; then
        echo "Installing development dependencies"
        pipenv install --dev
    else
        pipenv install
    fi

elif [ -f "requirements.txt" ]; then
    echo "==> Installing requirements.txt dependencies"

    # Check for an active virtual environment, or look for one in the project directory
    if [ -n "$(python -c 'import sys; print (sys.real_prefix)' 2>/dev/null)" ]; then
        echo "Installing packages in the active virtual environment"
    elif [ -f "venv/bin/activate" ]; then
        echo "Installing packages in the project's venv virtual environment"
        source venv/bin/activate
    elif [ -f ".venv/bin/activate" ]; then
        echo "Installing packages in the project's .venv virtual environment"
        source .venv/bin/activate
    else
        echo >2& "VIRTUAL ENVIRONMENT ERROR: This project will only install packages into a Python virtual environment. Please activate your virtual environment and rerun the script."
        exit 1
    fi

    pip install -r requirements.txt

    if [ ${install_dev} ] && [ -f "requirements-dev.txt" ]; then
        echo "Installing requirements-dev.txt development dependencies"
        pip install -r requirements-dev.txt
    fi

fi
